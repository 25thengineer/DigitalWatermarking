cmake_minimum_required(VERSION 3.3)
project(Watermark)

#For a basic project, you should probably only need to edit these variables
#Base QT directory
set(QT_PATH "D:/Documents/Qt Projects/Watermark")
#Build output path of your QT Creator project
set(QT_BIN "./build-Watermark-Desktop_Qt_5_7_0_MinGW_32bit-Debug")
#QT Version used, e.g. Probably found in ${QT_PATH}
set(QT_VERSION "5.7")
#mingw used. Probably found in ${QT_PATH}/${QT_VERSION/
set(QT_MINGW_VERSION "mingw530_32")
#Libraries to link to
set(QT_LIBRARIES Qt5::Core Qt5::Widgets Qt5::Gui)
#Libraries required. Probably the same as above minus the '::'. find_package() will be called on these
set(QT_LIBRARIES_REQUIRED Qt5Core Qt5Widgets Qt5Gui)
#################################################################


#Pull needed header files generated by QT first
set(QT_GENERATED qtGenerated)
add_custom_target(${QT_GENERATED})
#Get all header files in the directory
file(GLOB QT_GEN_HEADERS ${QT_BIN}/*.h)
#Copy them to the project dir
foreach(QT_GEN_HEADERS ${QT_GEN_HEADERS})
    add_custom_command(TARGET ${QT_GENERATED} PRE_BUILD COMMAND
            ${CMAKE_COMMAND} -E copy_if_different
            ${QT_GEN_HEADERS} ${CMAKE_SOURCE_DIR})
endforeach()


#Build tool paths
set(QT_MINGW "${QT_PATH}/${QT_VERSION}/${QT_MINGW_VERSION}")
set(QT_MINGW_TOOLS "${QT_PATH}/Tools/${QT_MINGW_VERSION}")
set(QT_MINGW_BIN ${QT_MINGW}/bin)
set(CMAKE_CXX_COMPILER "${QT_MINGW_TOOLS}/bin/g++.exe")
set(CMAKE_AR "${QT_MINGW_TOOLS}/bin/ar.exe")
set(CMAKE_LINKER "${QT_MINGW_TOOLS}/bin/g++.exe")


#find packages
set(CMAKE_PREFIX_PATH ${QT_MINGW})
foreach(QT_LIBRARIES_REQUIRED ${QT_LIBRARIES_REQUIRED})
    find_package( ${QT_LIBRARIES_REQUIRED} REQUIRED )
endforeach()

file(GLOB QT_CPP_GENERATED ${QT_BIN}/debug/*.cpp)

set(SOURCE_FILES main.cpp resource.qrc 
		menu.cpp menu.h menu.ui 
		creation.cpp creation.h creation.ui 
		makewm.cpp makewm.h makewm.ui 
		validation.cpp validation.h validation.ui 
		${QT_GEN_HEADERS} ${QT_CPP_GENERATED})
add_executable(QTTestProject ${SOURCE_FILES})
add_dependencies(${PROJECT_NAME} ${QT_GENERATED})
target_link_libraries(${PROJECT_NAME} ${QT_LIBRARIES})